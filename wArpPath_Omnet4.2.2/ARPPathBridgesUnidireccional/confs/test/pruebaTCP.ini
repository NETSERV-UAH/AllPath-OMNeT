[General]
network = arppathbridgesunidireccional.src.topologies.pruebaTCP

warnings = true
sim-time-limit = 1000s

cmdenv-module-messages = true # for normal (non-express) mode only
cmdenv-event-banners = true   # for normal (non-express) mode only

tkenv-plugin-path = ../../../etc/plugins

#semillas aleatorias:
num-rngs = 1
seed-0-mt = 11
**.relayUnit.broadcastSeed = 11

#
# Network specific settings
#

# ARP settings
**.arp.retryTimeout = 1s
**.arp.retryCount = 3
**.arp.cacheTimeout = 120s

# ARP-Path switch
**.relayUnit.agingTime = 100s
**.relayUnit.blockingTime = 1s
**.relayUnit.addressTableFile = ""
**.relayUnit.addressTableSize = 300
**.relayUnit.processingTime = 2us

#**.tcp.tcpAlgorithmClass = "TCPNewReno" #TCP.ned tiene por defecto "TCPReno", pero no sé cómo cambiarlo...

# TCP APPS - CLIENT
**.client.numTcpApps = 1
**.client.tcpApp[*].typename = "TCPBasicClientApp" #"TCPSessionApp" (FTP) "TCPBasicClientApp" (siempre va con TCPGenericSrvApp) #"TCPSrvHostApp" es la versión más genérica y compleja y no se suele usar

#tcp apps - TCPBasicClientApp
#**.client.tcpApp[*].localAddress = "172.0.0.1"
**.client.tcpApp[*].localPort = 10020
**.client.tcpApp[*].connectAddress = "server"
**.client.tcpApp[*].connectPort = 10021
**.client.tcpApp[*].dataTransferMode = "object" #@enum("bytecount","object","bytestream") = default("bytecount") #NOTAS: 'bytecount' no funciona, 'object' sí (da error al final), 'bytestream' da error
**.client.tcpApp[*].startTime = 5s #default(1s); // time first session begins
**.client.tcpApp[*].stopTime = 100s #default(0);  // time of finish sending, 0 means infinity
**.client.tcpApp[*].numRequestsPerSession = 3 #default(1);  // number of requests sent per session
**.client.tcpApp[*].requestLength = 100B #default(200B); // length of a request
**.client.tcpApp[*].replyLength = 100B #default(1MiB); // length of a reply
**.client.tcpApp[*].thinkTime = 10s # // time gap between requests
**.client.tcpApp[*].idleInterval = 50s # // time gap between sessions
#**.client.tcpApp[*].reconnectInterval @unit(s) = default(30s);  // if connection breaks, waits this much before trying to reconnect

#tcp apps - TCPSessionApp
#**.client.tcpApp[*].sendBytes = 100MiB
#**.client.tcpApp[*].active = true
#**.client.tcpApp[*].tOpen = 0s
#**.client.tcpApp[*].tSend = 0s
#**.client.tcpApp[*].tClose = 0s
#**.client.tcpApp[*].sendScript = "" #series of (time, number of bytes) pairs - order of sending, if not said it's one-off

# TCP APPS - SERVER
**.server.numTcpApps = 1
**.server.tcpApp[*].typename = "TCPGenericSrvApp" #"TCPSinkApp" "TCPEchoApp" "TCPGenericSrvApp" (siempre va con TCPBasicClientApp) #"TCPSrvHostApp" es la versión más genérica y compleja y no se suele usar
#tcp apps - TCPGenericSrvApp
#**.server.tcpApp[*].localAddress = "172.0.1.111"
**.server.tcpApp[*].localPort = 10021
**.server.tcpApp[*].replyDelay = 1s #default(0s);

#tcp flavour
#Por defecto es TCPReno, lo dejamos así: string tcpAlgorithmClass = default("TCPReno"); en TCP.ned, que es la clase que se coge por defecto en el StandardHostNew
#In practice, you do it by adding either this:
#**.tcp.tcpAlgorithmClass="TCPReno" or this:
#**.tcp.tcpAlgorithmClass="TCPTahoe" or this:
#**.tcp.tcpAlgorithmClass="TCPNewReno" or this:
#**.tcp.tcpAlgorithmClass="TCPNoCongestionControl" or this:
#**.tcp.tcpAlgorithmClass="DumbTCP" to your omnetpp.ini.

# pcapRecorder settings
**.numPcapRecorders = 1
**.client.pcapRecorder[0].pcapFile = "PruebaTCP-Client_Log.pcap"
**.server.pcapRecorder[0].pcapFile = "PruebaTCP-Server_Log.pcap"
