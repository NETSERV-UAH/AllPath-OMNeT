[General]
network = arppathbridgesunidireccional.src.topologies.gridLoadGenerator.gridfullhost

#semillas aleatorias:			
num-rngs = 1 #4			
seed-0-mt = 11			
#seed-1-mt = 4			
#seed-2-mt = 7			
#seed-3-mt = 19	
**.relayUnit.broadcastSeed = 11

#tiempo de simulación:			
sim-time-limit = 15000s

#tiempo de expiración de caché en hosts:			
#**.arp.cacheTimeout = 120s

#tiempo de bloqueo:			
**.relayUnit.blockingTime = 1s			
			
#tiempo de aprendizaje:			
**.relayUnit.agingTime = 100s			
			
#tiempo de proceso por switch:			
**.relayUnit.processingTime = 2us	

#tasa de transmisión	
**.switch[*].mac[*].txrate = 100Mbps 

#capacidad de colas de transmisión (switches):			
**.txQueueLimit =  100000		
			
#capacidad de colas de cada host:			
**.frameCapacity = 100000			

# Queues
**.ppp[*].queueType = "DropTailQueue"
**.eth[*].queueType = "DropTailQueue"

#direcciones MAC de cada switch:
**.switch[0].relayUnit.address = "00-00-00-00-01-00"			
**.switch[1].relayUnit.address = "00-00-00-00-01-01"			
**.switch[2].relayUnit.address = "00-00-00-00-01-02"			
**.switch[3].relayUnit.address = "00-00-00-00-01-03"
**.switch[4].relayUnit.address = "00-00-00-00-01-04"			
**.switch[5].relayUnit.address = "00-00-00-00-01-05"			
**.switch[6].relayUnit.address = "00-00-00-00-01-06"			
**.switch[7].relayUnit.address = "00-00-00-00-01-07"
**.switch[8].relayUnit.address = "00-00-00-00-01-08"

# Number of UDP apps (1) and which type of UDP traffic, for the UDPFlowGenerator					
**.udpGenType = "UDPFlowHost"
#**.generatorFreq = exponential(${0.16,0.08,0.04,0.02}s) # para 1Gbps
**.generatorFreq = exponential(0.1s) # para 100Mbps
#**.generatorFreq = exponential(${1.6,0.8,0.4,0.2}s) # para 100Mbps
#**.generatorFreq = exponential(${0.016,0.008,0.004,0.002}s)  
#**.generatorFreq = exponential(${0.032,0.016,0.008,0.004}s) 
**.stopTime = 15000s #250s #1600s 

# Weights and routing for the generator
#**.hostsWeights = "host[150] 4 host[151] 4 host[152] 4 host[153] 4 host[154] 4 host[155] 4 host[156] 4 host[157] 4 host[158] 4 host[159] 4 host[160] 4 host[161] 4 host[162] 4 host[163] 4 host[164] 4 host[165] 4 host[166] 4 host[167] 4 host[168] 4 host[169] 4 host[170] 4 host[171] 4 host[172] 4 host[173] 4 host[174] 4"
#**.hostsWeights = "host[150] 4 host[151] 4 host[152] 4 host[153] 4 host[154] 4 host[155] 4 host[156] 4 host[157] 4 host[158] 4 host[159] 4 host[160] 4 host[161] 4 host[162] 4 host[163] 4 host[164] 4 host[165] 4 host[166] 4 host[167] 4 host[168] 4 host[169] 4 host[170] 4 host[171] 4 host[172] 4 host[173] 4 host[174] 4 host[50] 4 host[51] 4 host[52] 4 host[53] 4 host[54] 4 host[55] 4 host[56] 4 host[57] 4 host[58] 4 host[59] 4 host[60] 4 host[61] 4 host[62] 4 host[63] 4 host[64] 4 host[65] 4 host[66] 4 host[67] 4 host[68] 4 host[69] 4 host[70] 4 host[71] 4 host[72] 4 host[73] 4 host[74] 4"
#**.hostsWeights = "host[0] 100"
#**.routeHosts = "host[1] host[200] host[200] host[1]"
#**.routeSwitches = "switch[0] switch[8] switch[8] switch[0]"

#Exclude all addresses but the edge-to-edge (ete) addresses
**.excludedAddresses = "host[5] host[6] host[7] host[8] host[9] host[10] host[11] host[12] host[13] host[14] host[15] host[16] host[17] host[18] host[19] host[20] host[21] host[22] host[23] host[24] host[25] host[26] host[27] host[28] host[29] host[30] host[31] host[32] host[33] host[34] host[35] host[36] host[37] host[38] host[39]"

#Measure latency and processing time statistics from time...
**.statsTime = 5000s #aunque sale ! diciendo que 'unused entry', sí se aplica

#tamaño de la topología:
**.columns = 3
**.rows = 3
**.hostNumber = 5

#Protocol version
**.protocolVersion = 2
#Repair version
**.repairType = 0 #no repair

#otros parámetros:			
**.vector-recording=false 		
**.scalar-recording=true
**.useColors = false			
total-stack = 2MiB			
**.relayUnit.addressTableSize = 300			
**.relayUnit.addressTableFile = ""			
**.relayUnit.numCPUs = 1			
**.mac[*].duplexEnabled = true		
